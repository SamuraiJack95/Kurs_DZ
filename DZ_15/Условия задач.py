# 1. Решали на занятии!!!!
# Вам задан список имен: people(str) и
# список ростов: heights(int)
# Оба массива имеют длину n.
#
# Для каждого индекса i people[i] и heights[i]
# обозначают имя и рост i-го человека.
#
# Вывести на экран имена, отсортированные в порядке
# убывания роста людей.


# 2. Решали на занятии!!!!
# Дан массив целых чисел nums.
# Нужно вернуть количество хороших пар.
#
# Пара (i, j) называется хорошей, если nums[i] == nums[j] и i < j.


# 3.
# Вам дана матричная сетка размера m x n,
# состоящая из положительных целых чисел.
#
# Выполняйте следующую операцию, пока сетка не станет пустой:
#
# Удалите элемент с наибольшим значением из каждой строки.
# Если существует несколько таких элементов, удалите любой из них.
# Добавьте к ответу максимальный из удаленных элементов.
# Обратите внимание, что количество столбцов уменьшается на
# один после каждой операции.
#
# Верните ответ после выполнения операций, описанных выше.
#
# Пример: [[1, 2, !4!], => [[1, !2!], => [[!1!], => [[],
#          [!3!, 3, 1]] =>  [!3!, 1]] =>  [!1!]] =>  []]
#             0 + 4   ||   4 + 3  ||  7 + 1 => Ответ: 8


# 4. Решали на занятии!!!!
# Дан массив чисел nums. Для каждого nums[i] узнайте,
# сколько чисел в массиве меньше его.
#
# То есть для каждого nums[i] вы должны подсчитать
# количество допустимых j таких,
# что j != i и nums[j] < nums[i].
#
# Вернуть ответ в виде массива.
#
# Пример:
# nums = [8,1,2,2,3]
# Вывод: [4,0,1,1,3]


# 5. Решали на занятии!!!!
# Вам дана сетка row X col, представляющая карту,
# где grid[i][j] = 1 представляет землю,
# а grid[i][j] = 0 представляет воду.
#
# Ячейки сетки соединены по горизонтали/
# вертикали (не по диагонали).
# Сетка полностью окружена водой, и на ней ровно один остров
# (т. е. одна или несколько соединенных ячеек суши).
#
# На острове нет «озёр», то есть вода внутри не связана
# с водой вокруг острова. Одна ячейка представляет собой
# квадрат со стороной 1. Сетка прямоугольная, ширина и
# высота не превосходят 100.
#
# Определить периметр острова.


# 6. Решали на занятии!!!!
# Дана двумерная сетка размера m x n и целое число k.
# Вам нужно сдвинуть сетку k раз.

# При работе в одну операцию:

# Элемент в grid[i][j] перемещается в grid[i][j + 1].
# Элемент в grid[i][n - 1] перемещается в grid[i + 1][0].
# Элемент в grid[m - 1][n - 1] перемещается в grid[0][0].

# Верните 2D-сетку после применения операции сдвига k раз.


# 7. Решали на занятии!!!!
# Дана матрица m x n различных чисел,
# вернуть все счастливые числа в матрице в любом порядке.

# Счастливое число — это такой элемент матрицы,
# что он является минимальным элементом в своей
# строке и максимальным в ее столбце.


# 8.
# Вам дана целочисленная матричная сетка размера n x n.
#
# Создайте целочисленную матрицу max_local размера
# (n - 2) x (n - 2), такую, что:
#
# max_local[i][j] равно наибольшему значению матрицы
# 3 x 3 в сетке с центром вокруг строки i + 1 и столбца j + 1.
# Другими словами, мы хотим найти наибольшее значение
# в каждой непрерывной матрице 3 x 3 в сетке.
#
# Верните сгенерированную матрицу.



# Бонус. Решали на занятии!!!!
# Для данного положительного целого числа n
# вернуть наименьшее положительное целое число,
# кратное как 2, так и n.
# Например:
# >>> 5
# Ответ: 10, так как это минимальное положительное число делящееся на 2 и на 5
# >>> 6
# Ответ: 6, так как это минимальное положительное число делящееся на 2 и на 6